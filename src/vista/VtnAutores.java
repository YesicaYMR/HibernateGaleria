/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import operaciones.OperacionesAutor;
import operaciones.OperacionesExposiciones;
import operaciones.OperacionesObras;
import operaciones.OperacionesSala;
import pojos.Autor;
import pojos.Obra;

/**
 *
 * @author Yesica
 */
public class VtnAutores extends javax.swing.JFrame {

    VtnInicio vtnInicio;
    DefaultComboBoxModel modeloAutores;
    DefaultListModel modeloList;
    OperacionesSala operacionesSala = new OperacionesSala();
    OperacionesExposiciones operacionesExposiciones = new OperacionesExposiciones();
    OperacionesAutor operacionesAutor = new OperacionesAutor();
    OperacionesObras operacionesObras = new OperacionesObras();

    /**
     * Creates new form VtnAutores
     */
    public VtnAutores() {
        initComponents();
        pnlCrear.setVisible(false);
        pnlEliminar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCrear = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAnno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNacionalidad = new javax.swing.JTextField();
        btnConfirmarCrear = new javax.swing.JButton();
        btnCancelarCrear = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        pnlEliminar = new javax.swing.JPanel();
        cmbAutor = new javax.swing.JComboBox<>();
        lblAutorEliminar = new javax.swing.JLabel();
        lblAnnoEliminar = new javax.swing.JLabel();
        lblNacionalidad = new javax.swing.JLabel();
        btnEliminarEliminar = new javax.swing.JButton();
        brnCancelarEliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstObras = new javax.swing.JList<>();
        btnCrear = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        lblRegresar = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Autores");
        setMinimumSize(new java.awt.Dimension(1030, 980));
        setPreferredSize(new java.awt.Dimension(1030, 980));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlCrear.setBackground(new java.awt.Color(255, 255, 255));
        pnlCrear.setForeground(new java.awt.Color(255, 255, 255));
        pnlCrear.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre");

        txtNombre.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("AÃ±o de nacimiento");

        txtAnno.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nacionalidad");

        txtNacionalidad.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N

        btnConfirmarCrear.setBackground(java.awt.SystemColor.windowBorder);
        btnConfirmarCrear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConfirmarCrear.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmarCrear.setText("Aceptar");
        btnConfirmarCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmarCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarCrearActionPerformed(evt);
            }
        });

        btnCancelarCrear.setBackground(java.awt.SystemColor.windowBorder);
        btnCancelarCrear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelarCrear.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarCrear.setText("Cancelar");
        btnCancelarCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCrearLayout = new javax.swing.GroupLayout(pnlCrear);
        pnlCrear.setLayout(pnlCrearLayout);
        pnlCrearLayout.setHorizontalGroup(
            pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCrearLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(776, 776, 776))
            .addGroup(pnlCrearLayout.createSequentialGroup()
                .addGroup(pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCrearLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAnno, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlCrearLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(btnConfirmarCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnCancelarCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCrearLayout.setVerticalGroup(
            pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCrearLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(39, 39, 39)
                .addGroup(pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCrearLayout.createSequentialGroup()
                        .addComponent(txtNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(txtAnno, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCrearLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmarCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(301, Short.MAX_VALUE))
        );

        getContentPane().add(pnlCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 800, 670));

        pnlEliminar.setOpaque(false);

        cmbAutor.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        cmbAutor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAutorActionPerformed(evt);
            }
        });

        lblAutorEliminar.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        lblAutorEliminar.setForeground(new java.awt.Color(255, 255, 255));
        lblAutorEliminar.setText("Autor");

        lblAnnoEliminar.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        lblAnnoEliminar.setForeground(new java.awt.Color(255, 255, 255));
        lblAnnoEliminar.setText("AÃ±o nacimiento");

        lblNacionalidad.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        lblNacionalidad.setForeground(new java.awt.Color(255, 255, 255));
        lblNacionalidad.setText("Nacionalidad");

        btnEliminarEliminar.setBackground(java.awt.SystemColor.windowBorder);
        btnEliminarEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarEliminar.setText("Eliminar");
        btnEliminarEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEliminarActionPerformed(evt);
            }
        });

        brnCancelarEliminar.setBackground(java.awt.SystemColor.windowBorder);
        brnCancelarEliminar.setForeground(new java.awt.Color(255, 255, 255));
        brnCancelarEliminar.setText("Cancelar");
        brnCancelarEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        brnCancelarEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnCancelarEliminarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Obras:");

        jScrollPane1.setOpaque(false);

        lstObras.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        lstObras.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstObras.setOpaque(false);
        jScrollPane1.setViewportView(lstObras);

        javax.swing.GroupLayout pnlEliminarLayout = new javax.swing.GroupLayout(pnlEliminar);
        pnlEliminar.setLayout(pnlEliminarLayout);
        pnlEliminarLayout.setHorizontalGroup(
            pnlEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEliminarLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(lblAutorEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(lblAnnoEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addComponent(lblNacionalidad)
                .addGap(90, 90, 90))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEliminarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
            .addGroup(pnlEliminarLayout.createSequentialGroup()
                .addGroup(pnlEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEliminarLayout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(jLabel4))
                    .addGroup(pnlEliminarLayout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEliminarLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(btnEliminarEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151)
                        .addComponent(brnCancelarEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEliminarLayout.setVerticalGroup(
            pnlEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEliminarLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(cmbAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(pnlEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAutorEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAnnoEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNacionalidad))
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brnCancelarEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        getContentPane().add(pnlEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 800, 650));

        btnCrear.setBackground(java.awt.SystemColor.windowBorder);
        btnCrear.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnCrear.setForeground(new java.awt.Color(255, 255, 255));
        btnCrear.setText("Crear");
        btnCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, 170, 50));

        titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/TituloAutores.png"))); // NOI18N
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        btnEliminar.setBackground(java.awt.SystemColor.windowBorder);
        btnEliminar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 170, 50));

        lblRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/botonVolver.png"))); // NOI18N
        lblRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegresarMouseClicked(evt);
            }
        });
        getContentPane().add(lblRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Autor.jpeg"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegresarMouseClicked
        //vuelve a la pantalla de inicio y destruye esta
        vtnInicio = new VtnInicio();
        vtnInicio.setVisible(true);
        dispose();

    }//GEN-LAST:event_lblRegresarMouseClicked

    private void btnConfirmarCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarCrearActionPerformed
        if (comprobarDatos()) {
            String nombre = txtNombre.getText();
            String anno = txtAnno.getText();
            String nacionalidad = txtNacionalidad.getText();
            //crea el autor en la bbdd
            operacionesAutor.crearAutor(nombre, anno, nacionalidad);
            JOptionPane.showMessageDialog(this, "Autor creado exitosamente");
            limpiarCrear();
        }
    }//GEN-LAST:event_btnConfirmarCrearActionPerformed

    private void btnCancelarCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCrearActionPerformed
        limpiarCrear();
    }//GEN-LAST:event_btnCancelarCrearActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        pnlCrear.setVisible(true);
        pnlEliminar.setVisible(false);
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        pnlCrear.setVisible(false);
        pnlEliminar.setVisible(true);
        modeloList = new DefaultListModel();
        lstObras.setModel(modeloList);
        //carga el combo autores
        cargarCombo();
        btnEliminarEliminar.setEnabled(false);

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void cmbAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAutorActionPerformed
        int pos = cmbAutor.getSelectedIndex();
        if (pos != 0) {
            try {
                limpiarEliminar();
            } catch (Exception ex) {
            }
            Autor c = (Autor) modeloAutores.getSelectedItem();
            lblAutorEliminar.setText(c.getNombre());
            lblAnnoEliminar.setText(c.getFechNacimiento());
            lblNacionalidad.setText(c.getNacionalidad());
            //cargar el List con las obras del autor
            cargarInfoList(c.getIdAutor());
            btnEliminarEliminar.setEnabled(true);
        } else {
            limpiarEliminar();
            btnEliminarEliminar.setEnabled(false);
        }
    }//GEN-LAST:event_cmbAutorActionPerformed

    private void brnCancelarEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnCancelarEliminarActionPerformed
        limpiarEliminar();
        btnEliminarEliminar.setEnabled(false);
        cmbAutor.setSelectedIndex(0);
    }//GEN-LAST:event_brnCancelarEliminarActionPerformed

    private void btnEliminarEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEliminarActionPerformed
        Autor c = (Autor) modeloAutores.getSelectedItem();
        int id = c.getIdAutor();
        //elimina el autor de la bbdd si no tiene ninguna obra
        int resultado = operacionesAutor.eliminarAutor(String.valueOf(id));
        if (resultado == 0) {
            JOptionPane.showMessageDialog(this, "Autor eliminado exitosamente");
            limpiarEliminar();
            cmbAutor.removeAll();
            cargarCombo();
        } else {
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "No se puede eliminar un autor con obras creadas");
            } else {
                JOptionPane.showMessageDialog(this, "No se ha encontrado al autor");
            }
        }
    }//GEN-LAST:event_btnEliminarEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnCancelarEliminar;
    private javax.swing.JButton btnCancelarCrear;
    private javax.swing.JButton btnConfirmarCrear;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarEliminar;
    private javax.swing.JComboBox<String> cmbAutor;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnnoEliminar;
    private javax.swing.JLabel lblAutorEliminar;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblNacionalidad;
    private javax.swing.JLabel lblRegresar;
    private javax.swing.JList<String> lstObras;
    private javax.swing.JPanel pnlCrear;
    private javax.swing.JPanel pnlEliminar;
    private javax.swing.JLabel titulo;
    private javax.swing.JTextField txtAnno;
    private javax.swing.JTextField txtNacionalidad;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
/**
     * Comprueba que los datos ingresados sean vÃ¡lidos.
     *
     * @return true si los datos son vÃ¡lidos, false si no lo son.
     */
    private boolean comprobarDatos() {
        boolean correcto = false;
        String nombre = txtNombre.getText();
        int anno;
        String nacionalidad = txtNacionalidad.getText();
        //Comprueba si ha rellenado el campo nombre
        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe introducir un nombre");
            txtNombre.requestFocus();
           
        }  
        //Si hay texto comprueba que el autor no exista
        else if(nombre.length()>0){
            int resultado= operacionesAutor.obtenerIdPorNombre(nombre);
            if(resultado==1)
                 JOptionPane.showMessageDialog(this, "Este autor ya existe en la base de datos");
            else if(resultado==-1)
                 JOptionPane.showMessageDialog(this, "Ha surgido un error");
            else
               correcto=true;
        }
        //Comprueba si ha rellenado el campo nacionalidad
        else if (nacionalidad.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe introducir una nacionalidad");
            txtNacionalidad.requestFocus();
        } //Comprueba si ha rellenado el aÃ±o y es un valor numerico
        else if (!txtAnno.getText().isEmpty()) {
            try {
                anno = Integer.parseInt(txtAnno.getText());
                correcto = true;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "El aÃ±o debe ser numÃ©rico");
                txtAnno.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe introducir un aÃ±o de nacimiento");
            txtAnno.requestFocus();
        }
        return correcto;
    }

    /**
     * Limpia los campos del formulario de creaciÃ³n.
     */
    private void limpiarCrear() {
        txtNombre.setText("");
        txtNacionalidad.setText("");
        txtAnno.setText("");
        txtNombre.requestFocus();
    }

    /**
     * Carga el combo de autores con los autores disponibles.
     */
    private void cargarCombo() {
        modeloAutores = new DefaultComboBoxModel();
        cmbAutor.setModel(modeloAutores);
        modeloAutores.addElement("--Seleccione un autor--");
//obtener todos los autores de la bbdd
        List<Autor> autores = operacionesAutor.obtenerTodosLosAutores();
        for (Autor autor : autores) {
            modeloAutores.addElement(autor);
        }
    }

    /**
     * Carga la informaciÃ³n de las obras del autor seleccionado en la lista.
     *
     * @param idAutor ID del autor seleccionado.
     */
    private void cargarInfoList(int idAutor) {
        operacionesObras = new OperacionesObras();
        //obtener las obras del autor seleccionado
        List<Obra> obras = operacionesObras.obtenerObrasPorAutor(idAutor);
        for (Obra obra : obras) {
            modeloList.addElement(obra);
        }
    }

    /**
     * Limpia la informaciÃ³n mostrada para eliminar un autor.
     */
    private void limpiarEliminar() {
        lblAutorEliminar.setText("");
        lblAnnoEliminar.setText("");
        lblNacionalidad.setText("");
        modeloList.removeAllElements();
    }

}
